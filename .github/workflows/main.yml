name: Model CI
permissions:
  contents: write
  issues: write
  pull-requests: write
on:
  push:
    branches:
      - main
      - dev
      - master
  pull_request:
    branches:
      - main
      - dev
      - master

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install CML
        if: github.event_name == 'pull_request'
        run: npm install -g @dvcorg/cml

      - name: Install Python dependencies and Google Cloud CLI
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          sudo apt-get update
          sudo apt-get install -y google-cloud-cli

      - name: Authenticate DVC with GCS
        shell: bash
        run: |
          echo '${{ secrets.GCP_KEY }}' > key.json
          export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/key.json
          echo "✅ GCP credentials written to key.json"
          python3 -m json.tool key.json > /dev/null && echo "✅ JSON is valid"
          dvc remote modify gcs-remote credentialpath key.json
          dvc remote modify gcs-remote endpointurl https://storage.googleapis.com

      - name: Verify GCS Access
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/key.json
          gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
          gcloud auth list
          gsutil ls gs://mlops-course-soy-bridge-474214-h8-unique

      - name: Pull DVC data
        run: |
          echo "Pulling data from DVC remote..."
          dvc pull

      - name: Run tests and generate report
        run: |
          echo "Running tests..."
          pytest --md report.md

      - name: Create CML report
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat report.md >> $GITHUB_STEP_SUMMARY
          cml comment create report.md 
